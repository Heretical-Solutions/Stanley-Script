//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /SSD1/Repositories/Unity/Heretical Solutions/Stanley Script Unity/Assets/Scripts/Stanley script/Grammars/StanleyLexer.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace HereticalSolutions.StanleyScript.Grammars {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class StanleyLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		SPACE=1, COMMENT=2, COMMENT_INPUT=3, LINE_COMMENT=4, FROM_THIS_MOMENT=5, 
		NOT_REACT=6, NOTHING_WOULD_HAPPEN=7, REFER_TO=8, STORY=9, SHOULD_BE=10, 
		A=11, THE=12, AND=13, AT=14, ONCE=15, AS=16, OF=17, TO=18, HAD=19, HAS=20, 
		HAVE=21, PASSED=22, WAS=23, WERE=24, WOULD=25, ANYMORE=26, MINUTES=27, 
		SECONDS=28, STAR=29, DIVIDE=30, MODULE=31, PLUS=32, MINUS=33, EQUAL_SYMBOL=34, 
		GREATER_SYMBOL=35, LESS_SYMBOL=36, EXCLAMATION_SYMBOL=37, DOT=38, LR_BRACKET=39, 
		RR_BRACKET=40, COMMA=41, SEMI=42, AT_SIGN=43, HASH=44, ZERO_DECIMAL=45, 
		ONE_DECIMAL=46, TWO_DECIMAL=47, SINGLE_QUOTE_SYMB=48, DOUBLE_QUOTE_SYMB=49, 
		REVERSE_QUOTE_SYMB=50, COLON_SYMB=51, DOLLAR_SYMB=52, STRING_LITERAL=53, 
		DECIMAL_LITERAL=54, REAL_LITERAL=55, ID=56, REVERSE_QUOTE_ID=57, ERROR_RECONGNIGION=58;
	public const int
		STANLEY_COMMENT=2, ERRORCHANNEL=3;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "STANLEY_COMMENT", "ERRORCHANNEL"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"SPACE", "COMMENT", "COMMENT_INPUT", "LINE_COMMENT", "FROM_THIS_MOMENT", 
		"NOT_REACT", "NOTHING_WOULD_HAPPEN", "REFER_TO", "STORY", "SHOULD_BE", 
		"A", "THE", "AND", "AT", "ONCE", "AS", "OF", "TO", "HAD", "HAS", "HAVE", 
		"PASSED", "WAS", "WERE", "WOULD", "ANYMORE", "MINUTES", "SECONDS", "STAR", 
		"DIVIDE", "MODULE", "PLUS", "MINUS", "EQUAL_SYMBOL", "GREATER_SYMBOL", 
		"LESS_SYMBOL", "EXCLAMATION_SYMBOL", "DOT", "LR_BRACKET", "RR_BRACKET", 
		"COMMA", "SEMI", "AT_SIGN", "HASH", "ZERO_DECIMAL", "ONE_DECIMAL", "TWO_DECIMAL", 
		"SINGLE_QUOTE_SYMB", "DOUBLE_QUOTE_SYMB", "REVERSE_QUOTE_SYMB", "COLON_SYMB", 
		"DOLLAR_SYMB", "QUOTE_SYMB", "STRING_LITERAL", "DECIMAL_LITERAL", "REAL_LITERAL", 
		"ID", "REVERSE_QUOTE_ID", "ID_LITERAL", "DQUOTA_STRING", "SQUOTA_STRING", 
		"BQUOTA_STRING", "DEC_DIGIT", "ERROR_RECONGNIGION"
	};


	public StanleyLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public StanleyLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, "'FROM THIS MOMENT'", "'NOT REACT'", "'NOTHING WOULD HAPPEN'", 
		"'REFER TO'", "'STORY ABOUT'", "'SHOULD BE'", "'A'", "'THE'", "'AND'", 
		"'AT'", "'ONCE'", "'AS'", "'OF'", "'TO'", "'HAD'", "'HAS'", "'HAVE'", 
		"'PASSED'", "'WAS'", "'WERE'", "'WOULD'", "'ANYMORE'", "'MINUTES'", "'SECONDS'", 
		"'*'", "'/'", "'%'", "'+'", "'-'", "'='", "'>'", "'<'", "'!'", "'.'", 
		"'('", "')'", "','", "';'", "'@'", "'#'", "'0'", "'1'", "'2'", "'''", 
		"'\"'", "'`'", "':'", "'$'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "SPACE", "COMMENT", "COMMENT_INPUT", "LINE_COMMENT", "FROM_THIS_MOMENT", 
		"NOT_REACT", "NOTHING_WOULD_HAPPEN", "REFER_TO", "STORY", "SHOULD_BE", 
		"A", "THE", "AND", "AT", "ONCE", "AS", "OF", "TO", "HAD", "HAS", "HAVE", 
		"PASSED", "WAS", "WERE", "WOULD", "ANYMORE", "MINUTES", "SECONDS", "STAR", 
		"DIVIDE", "MODULE", "PLUS", "MINUS", "EQUAL_SYMBOL", "GREATER_SYMBOL", 
		"LESS_SYMBOL", "EXCLAMATION_SYMBOL", "DOT", "LR_BRACKET", "RR_BRACKET", 
		"COMMA", "SEMI", "AT_SIGN", "HASH", "ZERO_DECIMAL", "ONE_DECIMAL", "TWO_DECIMAL", 
		"SINGLE_QUOTE_SYMB", "DOUBLE_QUOTE_SYMB", "REVERSE_QUOTE_SYMB", "COLON_SYMB", 
		"DOLLAR_SYMB", "STRING_LITERAL", "DECIMAL_LITERAL", "REAL_LITERAL", "ID", 
		"REVERSE_QUOTE_ID", "ERROR_RECONGNIGION"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "StanleyLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static StanleyLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,58,502,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,1,0,4,0,131,8,0,11,0,12,0,132,1,0,1,0,1,1,1,1,1,1,1,1,1,1,4,1,142,
		8,1,11,1,12,1,143,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,5,2,155,8,2,10,2,
		12,2,158,9,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,5,3,169,8,3,10,3,12,3,
		172,9,3,1,3,5,3,175,8,3,10,3,12,3,178,9,3,1,3,3,3,181,8,3,1,3,1,3,3,3,
		185,8,3,1,3,1,3,1,3,1,3,3,3,191,8,3,1,3,1,3,3,3,195,8,3,3,3,197,8,3,1,
		3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
		1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,
		6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,
		1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
		8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,11,
		1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,
		1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,19,1,19,1,19,
		1,19,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,
		1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,
		1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,
		1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,29,1,29,
		1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,
		1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,
		1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,
		1,51,1,51,1,52,1,52,1,52,3,52,417,8,52,1,53,1,53,1,53,3,53,422,8,53,1,
		54,4,54,425,8,54,11,54,12,54,426,1,55,4,55,430,8,55,11,55,12,55,431,1,
		55,1,55,5,55,436,8,55,10,55,12,55,439,9,55,1,55,1,55,4,55,443,8,55,11,
		55,12,55,444,3,55,447,8,55,1,56,1,56,1,57,1,57,1,58,1,58,5,58,455,8,58,
		10,58,12,58,458,9,58,1,59,1,59,1,59,1,59,1,59,1,59,5,59,466,8,59,10,59,
		12,59,469,9,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,60,5,60,479,8,60,10,
		60,12,60,482,9,60,1,60,1,60,1,61,1,61,1,61,1,61,5,61,490,8,61,10,61,12,
		61,493,9,61,1,61,1,61,1,62,1,62,1,63,1,63,1,63,1,63,2,143,156,0,64,1,1,
		3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
		31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,
		55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,
		79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,
		51,103,52,105,0,107,53,109,54,111,55,113,56,115,57,117,0,119,0,121,0,123,
		0,125,0,127,58,1,0,9,3,0,9,10,13,13,32,32,2,0,9,9,32,32,2,0,10,10,13,13,
		3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,0,34,34,92,92,2,
		0,39,39,92,92,1,0,96,96,1,0,48,57,523,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,
		0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
		1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,
		0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
		1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,
		0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
		1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,
		0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
		1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,
		0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,
		107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,
		127,1,0,0,0,1,130,1,0,0,0,3,136,1,0,0,0,5,150,1,0,0,0,7,196,1,0,0,0,9,
		200,1,0,0,0,11,217,1,0,0,0,13,227,1,0,0,0,15,248,1,0,0,0,17,257,1,0,0,
		0,19,269,1,0,0,0,21,279,1,0,0,0,23,281,1,0,0,0,25,285,1,0,0,0,27,289,1,
		0,0,0,29,292,1,0,0,0,31,297,1,0,0,0,33,300,1,0,0,0,35,303,1,0,0,0,37,306,
		1,0,0,0,39,310,1,0,0,0,41,314,1,0,0,0,43,319,1,0,0,0,45,326,1,0,0,0,47,
		330,1,0,0,0,49,335,1,0,0,0,51,341,1,0,0,0,53,349,1,0,0,0,55,357,1,0,0,
		0,57,365,1,0,0,0,59,367,1,0,0,0,61,369,1,0,0,0,63,371,1,0,0,0,65,373,1,
		0,0,0,67,375,1,0,0,0,69,377,1,0,0,0,71,379,1,0,0,0,73,381,1,0,0,0,75,383,
		1,0,0,0,77,385,1,0,0,0,79,387,1,0,0,0,81,389,1,0,0,0,83,391,1,0,0,0,85,
		393,1,0,0,0,87,395,1,0,0,0,89,397,1,0,0,0,91,399,1,0,0,0,93,401,1,0,0,
		0,95,403,1,0,0,0,97,405,1,0,0,0,99,407,1,0,0,0,101,409,1,0,0,0,103,411,
		1,0,0,0,105,416,1,0,0,0,107,421,1,0,0,0,109,424,1,0,0,0,111,446,1,0,0,
		0,113,448,1,0,0,0,115,450,1,0,0,0,117,452,1,0,0,0,119,459,1,0,0,0,121,
		472,1,0,0,0,123,485,1,0,0,0,125,496,1,0,0,0,127,498,1,0,0,0,129,131,7,
		0,0,0,130,129,1,0,0,0,131,132,1,0,0,0,132,130,1,0,0,0,132,133,1,0,0,0,
		133,134,1,0,0,0,134,135,6,0,0,0,135,2,1,0,0,0,136,137,5,47,0,0,137,138,
		5,42,0,0,138,139,5,33,0,0,139,141,1,0,0,0,140,142,9,0,0,0,141,140,1,0,
		0,0,142,143,1,0,0,0,143,144,1,0,0,0,143,141,1,0,0,0,144,145,1,0,0,0,145,
		146,5,42,0,0,146,147,5,47,0,0,147,148,1,0,0,0,148,149,6,1,0,0,149,4,1,
		0,0,0,150,151,5,47,0,0,151,152,5,42,0,0,152,156,1,0,0,0,153,155,9,0,0,
		0,154,153,1,0,0,0,155,158,1,0,0,0,156,157,1,0,0,0,156,154,1,0,0,0,157,
		159,1,0,0,0,158,156,1,0,0,0,159,160,5,42,0,0,160,161,5,47,0,0,161,162,
		1,0,0,0,162,163,6,2,0,0,163,6,1,0,0,0,164,165,5,47,0,0,165,166,5,47,0,
		0,166,170,1,0,0,0,167,169,7,1,0,0,168,167,1,0,0,0,169,172,1,0,0,0,170,
		168,1,0,0,0,170,171,1,0,0,0,171,176,1,0,0,0,172,170,1,0,0,0,173,175,8,
		2,0,0,174,173,1,0,0,0,175,178,1,0,0,0,176,174,1,0,0,0,176,177,1,0,0,0,
		177,184,1,0,0,0,178,176,1,0,0,0,179,181,5,13,0,0,180,179,1,0,0,0,180,181,
		1,0,0,0,181,182,1,0,0,0,182,185,5,10,0,0,183,185,5,0,0,1,184,180,1,0,0,
		0,184,183,1,0,0,0,185,197,1,0,0,0,186,187,5,47,0,0,187,188,5,47,0,0,188,
		194,1,0,0,0,189,191,5,13,0,0,190,189,1,0,0,0,190,191,1,0,0,0,191,192,1,
		0,0,0,192,195,5,10,0,0,193,195,5,0,0,1,194,190,1,0,0,0,194,193,1,0,0,0,
		195,197,1,0,0,0,196,164,1,0,0,0,196,186,1,0,0,0,197,198,1,0,0,0,198,199,
		6,3,0,0,199,8,1,0,0,0,200,201,5,70,0,0,201,202,5,82,0,0,202,203,5,79,0,
		0,203,204,5,77,0,0,204,205,5,32,0,0,205,206,5,84,0,0,206,207,5,72,0,0,
		207,208,5,73,0,0,208,209,5,83,0,0,209,210,5,32,0,0,210,211,5,77,0,0,211,
		212,5,79,0,0,212,213,5,77,0,0,213,214,5,69,0,0,214,215,5,78,0,0,215,216,
		5,84,0,0,216,10,1,0,0,0,217,218,5,78,0,0,218,219,5,79,0,0,219,220,5,84,
		0,0,220,221,5,32,0,0,221,222,5,82,0,0,222,223,5,69,0,0,223,224,5,65,0,
		0,224,225,5,67,0,0,225,226,5,84,0,0,226,12,1,0,0,0,227,228,5,78,0,0,228,
		229,5,79,0,0,229,230,5,84,0,0,230,231,5,72,0,0,231,232,5,73,0,0,232,233,
		5,78,0,0,233,234,5,71,0,0,234,235,5,32,0,0,235,236,5,87,0,0,236,237,5,
		79,0,0,237,238,5,85,0,0,238,239,5,76,0,0,239,240,5,68,0,0,240,241,5,32,
		0,0,241,242,5,72,0,0,242,243,5,65,0,0,243,244,5,80,0,0,244,245,5,80,0,
		0,245,246,5,69,0,0,246,247,5,78,0,0,247,14,1,0,0,0,248,249,5,82,0,0,249,
		250,5,69,0,0,250,251,5,70,0,0,251,252,5,69,0,0,252,253,5,82,0,0,253,254,
		5,32,0,0,254,255,5,84,0,0,255,256,5,79,0,0,256,16,1,0,0,0,257,258,5,83,
		0,0,258,259,5,84,0,0,259,260,5,79,0,0,260,261,5,82,0,0,261,262,5,89,0,
		0,262,263,5,32,0,0,263,264,5,65,0,0,264,265,5,66,0,0,265,266,5,79,0,0,
		266,267,5,85,0,0,267,268,5,84,0,0,268,18,1,0,0,0,269,270,5,83,0,0,270,
		271,5,72,0,0,271,272,5,79,0,0,272,273,5,85,0,0,273,274,5,76,0,0,274,275,
		5,68,0,0,275,276,5,32,0,0,276,277,5,66,0,0,277,278,5,69,0,0,278,20,1,0,
		0,0,279,280,5,65,0,0,280,22,1,0,0,0,281,282,5,84,0,0,282,283,5,72,0,0,
		283,284,5,69,0,0,284,24,1,0,0,0,285,286,5,65,0,0,286,287,5,78,0,0,287,
		288,5,68,0,0,288,26,1,0,0,0,289,290,5,65,0,0,290,291,5,84,0,0,291,28,1,
		0,0,0,292,293,5,79,0,0,293,294,5,78,0,0,294,295,5,67,0,0,295,296,5,69,
		0,0,296,30,1,0,0,0,297,298,5,65,0,0,298,299,5,83,0,0,299,32,1,0,0,0,300,
		301,5,79,0,0,301,302,5,70,0,0,302,34,1,0,0,0,303,304,5,84,0,0,304,305,
		5,79,0,0,305,36,1,0,0,0,306,307,5,72,0,0,307,308,5,65,0,0,308,309,5,68,
		0,0,309,38,1,0,0,0,310,311,5,72,0,0,311,312,5,65,0,0,312,313,5,83,0,0,
		313,40,1,0,0,0,314,315,5,72,0,0,315,316,5,65,0,0,316,317,5,86,0,0,317,
		318,5,69,0,0,318,42,1,0,0,0,319,320,5,80,0,0,320,321,5,65,0,0,321,322,
		5,83,0,0,322,323,5,83,0,0,323,324,5,69,0,0,324,325,5,68,0,0,325,44,1,0,
		0,0,326,327,5,87,0,0,327,328,5,65,0,0,328,329,5,83,0,0,329,46,1,0,0,0,
		330,331,5,87,0,0,331,332,5,69,0,0,332,333,5,82,0,0,333,334,5,69,0,0,334,
		48,1,0,0,0,335,336,5,87,0,0,336,337,5,79,0,0,337,338,5,85,0,0,338,339,
		5,76,0,0,339,340,5,68,0,0,340,50,1,0,0,0,341,342,5,65,0,0,342,343,5,78,
		0,0,343,344,5,89,0,0,344,345,5,77,0,0,345,346,5,79,0,0,346,347,5,82,0,
		0,347,348,5,69,0,0,348,52,1,0,0,0,349,350,5,77,0,0,350,351,5,73,0,0,351,
		352,5,78,0,0,352,353,5,85,0,0,353,354,5,84,0,0,354,355,5,69,0,0,355,356,
		5,83,0,0,356,54,1,0,0,0,357,358,5,83,0,0,358,359,5,69,0,0,359,360,5,67,
		0,0,360,361,5,79,0,0,361,362,5,78,0,0,362,363,5,68,0,0,363,364,5,83,0,
		0,364,56,1,0,0,0,365,366,5,42,0,0,366,58,1,0,0,0,367,368,5,47,0,0,368,
		60,1,0,0,0,369,370,5,37,0,0,370,62,1,0,0,0,371,372,5,43,0,0,372,64,1,0,
		0,0,373,374,5,45,0,0,374,66,1,0,0,0,375,376,5,61,0,0,376,68,1,0,0,0,377,
		378,5,62,0,0,378,70,1,0,0,0,379,380,5,60,0,0,380,72,1,0,0,0,381,382,5,
		33,0,0,382,74,1,0,0,0,383,384,5,46,0,0,384,76,1,0,0,0,385,386,5,40,0,0,
		386,78,1,0,0,0,387,388,5,41,0,0,388,80,1,0,0,0,389,390,5,44,0,0,390,82,
		1,0,0,0,391,392,5,59,0,0,392,84,1,0,0,0,393,394,5,64,0,0,394,86,1,0,0,
		0,395,396,5,35,0,0,396,88,1,0,0,0,397,398,5,48,0,0,398,90,1,0,0,0,399,
		400,5,49,0,0,400,92,1,0,0,0,401,402,5,50,0,0,402,94,1,0,0,0,403,404,5,
		39,0,0,404,96,1,0,0,0,405,406,5,34,0,0,406,98,1,0,0,0,407,408,5,96,0,0,
		408,100,1,0,0,0,409,410,5,58,0,0,410,102,1,0,0,0,411,412,5,36,0,0,412,
		104,1,0,0,0,413,417,3,95,47,0,414,417,3,97,48,0,415,417,3,99,49,0,416,
		413,1,0,0,0,416,414,1,0,0,0,416,415,1,0,0,0,417,106,1,0,0,0,418,422,3,
		119,59,0,419,422,3,121,60,0,420,422,3,123,61,0,421,418,1,0,0,0,421,419,
		1,0,0,0,421,420,1,0,0,0,422,108,1,0,0,0,423,425,3,125,62,0,424,423,1,0,
		0,0,425,426,1,0,0,0,426,424,1,0,0,0,426,427,1,0,0,0,427,110,1,0,0,0,428,
		430,3,125,62,0,429,428,1,0,0,0,430,431,1,0,0,0,431,429,1,0,0,0,431,432,
		1,0,0,0,432,433,1,0,0,0,433,437,5,46,0,0,434,436,3,125,62,0,435,434,1,
		0,0,0,436,439,1,0,0,0,437,435,1,0,0,0,437,438,1,0,0,0,438,447,1,0,0,0,
		439,437,1,0,0,0,440,442,5,46,0,0,441,443,3,125,62,0,442,441,1,0,0,0,443,
		444,1,0,0,0,444,442,1,0,0,0,444,445,1,0,0,0,445,447,1,0,0,0,446,429,1,
		0,0,0,446,440,1,0,0,0,447,112,1,0,0,0,448,449,3,117,58,0,449,114,1,0,0,
		0,450,451,3,123,61,0,451,116,1,0,0,0,452,456,7,3,0,0,453,455,7,4,0,0,454,
		453,1,0,0,0,455,458,1,0,0,0,456,454,1,0,0,0,456,457,1,0,0,0,457,118,1,
		0,0,0,458,456,1,0,0,0,459,467,5,34,0,0,460,461,5,92,0,0,461,466,9,0,0,
		0,462,463,5,34,0,0,463,466,5,34,0,0,464,466,8,5,0,0,465,460,1,0,0,0,465,
		462,1,0,0,0,465,464,1,0,0,0,466,469,1,0,0,0,467,465,1,0,0,0,467,468,1,
		0,0,0,468,470,1,0,0,0,469,467,1,0,0,0,470,471,5,34,0,0,471,120,1,0,0,0,
		472,480,5,39,0,0,473,474,5,92,0,0,474,479,9,0,0,0,475,476,5,39,0,0,476,
		479,5,39,0,0,477,479,8,6,0,0,478,473,1,0,0,0,478,475,1,0,0,0,478,477,1,
		0,0,0,479,482,1,0,0,0,480,478,1,0,0,0,480,481,1,0,0,0,481,483,1,0,0,0,
		482,480,1,0,0,0,483,484,5,39,0,0,484,122,1,0,0,0,485,491,5,96,0,0,486,
		490,8,7,0,0,487,488,5,96,0,0,488,490,5,96,0,0,489,486,1,0,0,0,489,487,
		1,0,0,0,490,493,1,0,0,0,491,489,1,0,0,0,491,492,1,0,0,0,492,494,1,0,0,
		0,493,491,1,0,0,0,494,495,5,96,0,0,495,124,1,0,0,0,496,497,7,8,0,0,497,
		126,1,0,0,0,498,499,9,0,0,0,499,500,1,0,0,0,500,501,6,63,1,0,501,128,1,
		0,0,0,25,0,132,143,156,170,176,180,184,190,194,196,416,421,426,431,437,
		444,446,456,465,467,478,480,489,491,2,6,0,0,0,3,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace HereticalSolutions.StanleyScript.Grammars
